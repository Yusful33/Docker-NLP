---
name: 02 Build with BuildKit Cache

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#NEW: (START) ##########################################################
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#NEW: (END) ############################################################
      
      - name: Read current version
        id: read_version
        run: |
            DOCKERHUB_REPO="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}"
            PAGE_INFO=$(curl -s "https://hub.docker.com/v2/repositories/yusufcattaneo836/basic-nlp/tags/?page_size=1")
            echo "Page info: $PAGE_INFO"
            LATEST_TAG=$(echo "$page_info" | jq -r '.results[0].name')
            echo "Pull latest_tag: $LATEST_TAG"
            if [ -n "$LATEST_TAG" ]; then
              version=$LATEST_TAG
            else
              version='0.0.0'  # Set default version if tag doesn't exist
            fi
            echo "Current version: $version"
            echo "current_version=$version" >> $GITHUB_OUTPUT

      - name: Increment version
        id: increment_version
        run: |
          current_version="${{ steps.read_version.outputs.current_version }}"
          echo "Current version: $current_version" 


          # Splitting version into major, minor, and patch components

          major=$(echo "$current_version" | cut -d '.' -f 1)
          minor=$(echo "$current_version" | cut -d '.' -f 2)
          patch=$(echo "$current_version" | cut -d '.' -f 3)
          patch=$((patch + 1))

          echo "Patch New: $patch"
          next_version="$major.$minor.$patch"

          echo "Next version is: $next_version"

          # Setting the output
          echo "increase_version=$next_version" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/basic-nlp:${{ steps.increment_version.outputs.increase_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
